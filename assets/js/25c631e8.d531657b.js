"use strict";(self.webpackChunkcreate_mongonext_app_docs=self.webpackChunkcreate_mongonext_app_docs||[]).push([[3860],{1732:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"database/mongoose-models","title":"Mongoose Models","description":"MongoNext uses Mongoose to define and interact with MongoDB collections. Each model represents a key entity in your application, such as users, products, blog posts, and categories.","source":"@site/docs/database/mongoose-models.md","sourceDirName":"database","slug":"/database/mongoose-models","permalink":"/docs/database/mongoose-models","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/database/mongoose-models.md","tags":[],"version":"current","frontMatter":{"id":"mongoose-models","title":"Mongoose Models","sidebar_label":"\ud83d\udcd3 Mongoose Models"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcd3 MongoDB Atlas Setup","permalink":"/docs/database/mongodb-atlas-setup"},"next":{"title":"\ud83d\udcbe Data Operations","permalink":"/docs/database/data-operations"}}');var t=o(4848),a=o(8453);const r={id:"mongoose-models",title:"Mongoose Models",sidebar_label:"\ud83d\udcd3 Mongoose Models"},i="Mongoose Models",d={},l=[{value:"Main Models",id:"main-models",level:2},{value:"1. User",id:"1-user",level:3},{value:"2. Product",id:"2-product",level:3},{value:"3. BlogPost",id:"3-blogpost",level:3},{value:"4. Category",id:"4-category",level:3},{value:"Extending Models",id:"extending-models",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"mongoose-models",children:"Mongoose Models"})}),"\n",(0,t.jsxs)(n.p,{children:["MongoNext uses ",(0,t.jsx)(n.a,{href:"https://mongoosejs.com/",children:"Mongoose"})," to define and interact with MongoDB collections. Each model represents a key entity in your application, such as users, products, blog posts, and categories."]}),"\n",(0,t.jsx)(n.h2,{id:"main-models",children:"Main Models"}),"\n",(0,t.jsx)(n.h3,{id:"1-user",children:"1. User"}),"\n",(0,t.jsx)(n.p,{children:"Represents registered users, including authentication details and roles."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const UserSchema = new mongoose.Schema({\n  name: String,\n  email: { type: String, unique: true },\n  password: String, // Hashed\n  role: { type: String, enum: ['user', 'admin'], default: 'user' },\n  createdAt: { type: Date, default: Date.now },\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-product",children:"2. Product"}),"\n",(0,t.jsx)(n.p,{children:"Represents products in the catalog, with support for images, categories, and pricing."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const ProductSchema = new mongoose.Schema({\n  name: String,\n  description: String,\n  price: Number,\n  image: String,\n  category: { type: mongoose.Schema.Types.ObjectId, ref: 'Category' },\n  createdAt: { type: Date, default: Date.now },\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-blogpost",children:"3. BlogPost"}),"\n",(0,t.jsx)(n.p,{children:"Represents blog articles, supporting markdown content and author references."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const BlogPostSchema = new mongoose.Schema({\n  title: String,\n  content: String, // Markdown\n  author: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n  tags: [String],\n  createdAt: { type: Date, default: Date.now },\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-category",children:"4. Category"}),"\n",(0,t.jsx)(n.p,{children:"Represents product or blog categories for filtering and organization."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const CategorySchema = new mongoose.Schema({\n  name: String,\n  description: String,\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"extending-models",children:"Extending Models"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add new fields or relationships by editing the schema in ",(0,t.jsx)(n.code,{children:"src/app/models/"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Use Mongoose middleware for validation, hooks, or custom logic."}),"\n",(0,t.jsxs)(n.li,{children:["Reference other models using ",(0,t.jsx)(n.code,{children:"ref"})," for population (e.g., product categories, blog authors)."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always hash passwords before saving user documents."}),"\n",(0,t.jsx)(n.li,{children:"Use Mongoose validation for required fields and data types."}),"\n",(0,t.jsxs)(n.li,{children:["Keep models organized in the ",(0,t.jsx)(n.code,{children:"models/"})," directory for maintainability."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Continue to ",(0,t.jsx)(n.a,{href:"/docs/database/data-operations",children:"Data Operations"})," for CRUD and advanced data handling in MongoNext."]})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var s=o(6540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);